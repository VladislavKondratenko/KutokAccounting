// <auto-generated />
using KutokAccounting.DataProvider;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KutokAccounting.DataProvider.Migrations
{
    [DbContext(typeof(KutokDbContext))]
    [Migration("20250912172753_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("created_at");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("number");

                    b.Property<int>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VendorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Invoice_Created_At");

                    b.HasIndex("StoreId");

                    b.HasIndex("VendorId");

                    b.ToTable("invoice", (string)null);
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<int>("IsOpened")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_opened");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<long>("SetupDate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("setup_date");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Name");

                    b.ToTable("store", (string)null);
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Transaction_Created_At");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("transaction", (string)null);
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsPositiveValue")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_positive_value");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("transaction_type", (string)null);
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("vendor", (string)null);
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Invoice", b =>
                {
                    b.HasOne("KutokAccounting.DataProvider.Models.Store", "Store")
                        .WithMany("Invoices")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutokAccounting.DataProvider.Models.Vendor", "Vendor")
                        .WithMany("Invoices")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Transaction", b =>
                {
                    b.HasOne("KutokAccounting.DataProvider.Models.Invoice", "Invoice")
                        .WithMany("Transactions")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("KutokAccounting.DataProvider.Models.Store", "Store")
                        .WithMany("Transactions")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutokAccounting.DataProvider.Models.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId");

                    b.Navigation("Invoice");

                    b.Navigation("Store");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Invoice", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Store", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("KutokAccounting.DataProvider.Models.Vendor", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
